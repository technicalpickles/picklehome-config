input_select:
  fireplace_tv_source_selector:
    name: Fireplace TV Sources Selector
    options:
      - Fire
      - Beach
      - Aquarium
    icon: mdi:video-input-hdmi

sensor:
  platform: template
  sensors:
    # this is a workaround for not being able to use secrets in templates
    # https://community.home-assistant.io/t/make-secrets-available-in-templating-engine/10507
    # it's used by script.fireplace_play
    fireplace_videos_directory:
      value_template: !secret fireplace_videos_directory

automation:
  - alias: Select Fireplace Input
    trigger:
      - platform: state
        entity_id: input_select.fireplace_tv_source_selector
    action:
      # call a script, defined below, using the current value of the input selector
      - service: script.turn_on
        data_template:
          entity_id: "script.fireplace_{{ states('input_select.fireplace_tv_source_selector') | lower | replace(' ', '_') }}"

  - alias: Fireplace TV is idle for more than 30 minutes, turn it off.
    trigger:
     platform: state
     entity_id: media_player.fireplace_tv
     to: 'idle'
     for:
       minutes: 30
    action:
      - service: media_player.turn_off
        entity_id: media_player.fireplace_tv

script:
  fireplace_off:
    sequence:
      - service: media_player.turn_off
        entity_id: media_player.fireplace_kodi
      - service: light.turn_off
        entity_id: light.fireplace_backlight

  fireplace_on:
    sequence:
      - service: media_player.turn_off
        entity_id: media_player.fireplace_kodi
      # play the last played thing again when turning on
      - service: script.turn_on
        data_template:
          entity_id: "script.fireplace_{{ states('input_select.fireplace_tv_source_selector') | lower | replace(' ', '_') }}"

  fireplace_play:
    sequence:
      - service: media_player.turn_on
        entity_id: media_player.fireplace_kodi
      - service: media_player.play_media
        entity_id: media_player.fireplace_kodi
        data_template:
          media_content_id: "{{states('sensor.fireplace_videos_directory')}}/{{file}}"
          media_content_type: "video"

  fireplace_fire:
    sequence:
      - service: light.turn_on
        entity_id: light.fireplace_backlight
        data:
          rgb_color: [255,161,0]
          brightness: 144
      - service: script.fireplace_play
        data:
          file: "The Best Fireplace Video (3 hours)-eyU3bRy2x44.mkv"

  fireplace_aquarium:
    sequence:
      - service: light.turn_on
        entity_id: light.fireplace_backlight
        data:
          rgb_color: [17,82,255]
          brightness: 254
      - service: script.fireplace_play
        data:
          file: "HD Open-Aquarium - Inside a Tropical Lagoon-iu6xIdAdJwo.mp4"

  fireplace_beach:
    sequence:
      - service: light.turn_on
        entity_id: light.fireplace_backlight
        data:
          rgb_color: [17,82,255]
          brightness: 254
      - service: script.fireplace_play
        data:
          file: Nature Sounds Ocean Waves for relaxation, yoga, meditation, reading, sleep, study [ Sleep Music ]-MD0tXdSsnBA.mp4


switch:
  - platform: template
    switches:
      fireplace:
        friendly_name: Fireplace
        value_template: >
           {%- if is_state_attr('media_player.fireplace', 'source', 'Fire') %}
             on
           {%- else %}
             off
           {%- endif %}
        turn_on:
          - service: input_select.select_option
            data:
              entity_id: input_select.fireplace_tv_source_selector
              option: Fire
        turn_off:
          - service: script.fireplace_off

      aquarium:
        friendly_name: Aquarium
        value_template: >
           {%- if is_state_attr('media_player.fireplace', 'source', 'Aquarium') %}
             on
           {%- else %}
             off
           {%- endif %}
        turn_on:
          - service: input_select.select_option
            data:
              entity_id: input_select.fireplace_tv_source_selector
              option: Aquarium
        turn_off:
          - service: script.fireplace_off

      beach:
        friendly_name: Beach
        value_template: >
           {%- if is_state_attr('media_player.fireplace', 'source', 'Beach') %}
             on
           {%- else %}
             off
           {%- endif %}
        turn_on:
          - service: input_select.select_option
            data:
              entity_id: input_select.fireplace_tv_source_selector
              option: Beach
        turn_off:
          - service: script.fireplace_off

media_player:
  - platform: universal
    name: fireplace
    friendly_name: Fireplace
    children:
      - media_player.fireplace_kodi
    state_template: >
      {% if is_state('switch.fireplace_tv_power', 'off') %}
      off
      {% else %}
      {{ states('media_player.fireplace_kodi') }}
      {% endif %}
    commands:
      turn_on:
        service: script.fireplace_on
      turn_off:
        service: script.fireplace_off
      select_source:
        service: input_select.select_option
        data_template:
          entity_id: input_select.fireplace_tv_source_selector
          option: '{{ source }}'

    attributes:
      state: media_player.fireplace_kodi
      source_list: input_select.fireplace_tv_source_selector|options
      source: input_select.fireplace_tv_source_selector
